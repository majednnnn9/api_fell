<!DOCTYPE html>
<html dir="rtl" lang="ar">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="أسئلة السنوات السابقة - منصة تعليمية شاملة">
    <title>أسئلة السنوات السابقة | المنصة التعليمية</title>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #1e40af;
            --text-color: #1f2937;
            --bg-color: #f3f4f6;
            --error-color: #dc2626;
            --error-bg: #fee2e2;
            --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Cairo', sans-serif;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        h1 {
            text-align: center;
            color: var(--primary-color);
            font-size: 2.5rem;
            margin-bottom: 2rem;
            position: relative;
            padding-bottom: 1rem;
        }

        h1::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: var(--primary-color);
            border-radius: 2px;
        }

        .template-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            padding: 1rem;
        }

        .template-item {
            background: white;
            padding: 1.5rem;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 180px;
            position: relative;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            border: 1px solid #e5e7eb;
        }

        .template-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            background: linear-gradient(45deg, #f8fafc, white);
        }

        .template-item h3 {
            font-size: 1.25rem;
            color: var(--text-color);
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .stats-container {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .stats-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #6b7280;
            font-size: 0.9rem;
            background: #f8fafc;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            transition: all 0.3s ease;
        }

        .stats-item.zero-images {
            background: var(--error-bg);
            color: var(--error-color);
        }

        .stats-item.zero-images i {
            color: var(--error-color);
        }

        .template-item:hover .stats-item {
            background: var(--primary-color);
            color: white;
        }

        .template-item:hover .stats-item.zero-images {
            background: var(--error-color);
            color: white;
        }

        .badge {
            position: absolute;
            top: 1rem;
            left: 1rem;
            background: var(--primary-color);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.8rem;
            opacity: 0;
            transform: translateX(-10px);
            transition: all 0.3s ease;
        }

        .template-item:hover .badge {
            opacity: 1;
            transform: translateX(0);
        }

        /* تحسين مظهر الأيقونات */
        .stats-item i {
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .stats-item:hover i {
            transform: scale(1.1);
        }

        .loading {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: all 0.3s ease;
        }

        .loading.active {
            opacity: 1;
            pointer-events: auto;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            h1 {
                font-size: 2rem;
            }

            .template-grid {
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 1rem;
            }

            .template-item {
                min-height: 150px;
                padding: 1.25rem;
            }

            .stats-item {
                padding: 0.4rem 0.8rem;
                font-size: 0.8rem;
            }
        }
    </style>
</head>

<body>
    <div class="loading">
        <div class="loading-spinner"></div>
    </div>

    <div class="container">
        <h1>مواد الحاسوب</h1>
        <div class="template-grid">
            <% result.forEach(function(item) { %>
                <div class="template-item" onclick="goToViewExams('<%= item.id %>')" data-views="<%= item.views %>">
                    <h3><%= item.name_ar %></h3>
                    <div class="stats-container">
                        <div class="stats-item">
                            <i class="fas fa-eye"></i>
                            <span class="views-number"><%= item.views %></span>
                            <span class="views-text">مشاهدة</span>
                        </div>
                        <div class="stats-item <%= (item.image_count === 0 || !item.image_count) ? 'zero-images' : '' %>">
                            <i class="fas fa-images"></i>
                            <span class="images-number"><%= item.image_count || 0 %></span>
                            <span class="images-text">صورة</span>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>

    <script>
        const loading = document.querySelector('.loading');

        function showLoading() {
            loading.classList.add('active');
        }

        function hideLoading() {
            loading.classList.remove('active');
        }

        function goToViewExams(itemId) {
            showLoading();
            const item = document.querySelector(`[data-views="${itemId}"]`);
            if (item) {
                const viewsNumber = item.querySelector('.views-number');
                const currentViews = parseInt(viewsNumber.textContent);
                viewsNumber.textContent = currentViews + 1;
            }

            setTimeout(() => {
                window.location.href = '/view-exams?id=' + itemId;
            }, 500);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const items = document.querySelectorAll('.template-item');
            items.forEach((item, index) => {
                item.style.opacity = '0';
                item.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    item.style.transition = 'all 0.5s ease';
                    item.style.opacity = '1';
                    item.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
</body>

</html>